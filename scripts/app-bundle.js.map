{"version":3,"sources":["app.ts","environment.ts","main.ts","resources/adapters/observation-adapter.ts","resources/index.ts","/Users/trulstveoy/Documents/githubrepos/aurknock/src/app.html"],"names":[],"mappings":";;;;;;;;;;;IAEA;QAAA;YAEY,SAAI,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAexC,CAAC;QAXC,oBAAM,GAAN;YAEE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YAErC,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;QAEtC,CAAC;QAED,qBAAO,GAAP,UAAQ,IAAW;YACjB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC3C,CAAC;QACH,UAAC;IAAD,CAjBA,AAiBC,IAAA;IAjBD,kBAiBC;IAfW;QAAT,4BAAQ;;qCAA6B;;;;;;ICJxC,kBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;ICCI,OAAQ,CAAC,MAAM,CAAC;QACpB,eAAe,EAAE,qBAAW,CAAC,KAAK;QAClC,QAAQ,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB;KACF,CAAC,CAAC;IAEH,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAdD,8BAcC;;;;;ICzBD;QACE;YACE,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAA;QACnD,CAAC;QACD,gDAAW,GAAX,UAAY,MAAM,EAAE,YAAY,EAAE,UAAU;YAE1C,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAQ9B,CAAC;QACH,iCAAC;IAAD,CAfA,AAeC,IAAA;IAfD,gEAeC;;;;;ICXD,mBAA0B,MAA8B;QAGtD,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,iCAAe,CAAC,CAAC,UAAU,CAAC,IAAI,gDAA0B,EAAE,CAAC,CAAC;IACrF,CAAC;IAJD,8BAIC;;;ACRD","file":"app-bundle.js","sourcesContent":["import {bindable} from \"aurelia-framework\";\n\nexport class App {\n  // @bindable message = 'Hello world';\n  @bindable text = ko.observable('foo');\n\n  // @bindable foo = {bar:'Quick brown fox'};\n\n  update(){\n    // this.message = this.reverse(this.message);\n    this.text(this.reverse(this.text()));\n    // this.foo.bar = this.reverse(this.foo.bar);\n    console.log('text: ' + this.text());\n    // console.log('foo.bar: ' + this.foo.bar);\n  }\n\n  reverse(text:string){\n    return text.split('').reverse().join('');\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n(<any>Promise).config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class KnockoutObservationAdapter {\n  constructor(){\n    console.log('KnockoutObservationAdapter created')\n  }\n  getObserver(object, propertyName, descriptor) {\n\n    console.log('observing...');\n    // let type = object.entityType;\n    // if (!type || !(type.__canObserve__ || createCanObserveLookup(type))[propertyName]) {\n    //   return null;\n    // }\n\n    // let observerLookup = object.__breezeObserver__ || createObserverLookup(object);\n    // return observerLookup.getObserver(propertyName);\n  }\n}","import {FrameworkConfiguration} from 'aurelia-framework';\nimport {ObserverLocator} from 'aurelia-binding';\nimport {KnockoutObservationAdapter} from './adapters/observation-adapter';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n\n  config.container.get(ObserverLocator).addAdapter(new KnockoutObservationAdapter());\n}\n",null],"sourceRoot":"../src"}